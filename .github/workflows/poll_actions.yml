name: Poll External Repo Actions

on:
  schedule:
    - cron: '*/5 * * * *'  # Runs every 5 minutes; adjust as needed (GitHub cron format)
  workflow_dispatch:  # Allows manual trigger for testing

jobs:
  poll-and-notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Poll GitHub API for workflow runs
        id: poll
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Optional; not needed for public repos
        run: |
          # Target repo details (replace with your external repo)
          OWNER="FEX-Emu"  # e.g., "microsoft"
          REPO="FEX"       # e.g., "vscode"
          
          # Fetch recent runs (last 10, adjustable; use since=YYYY-MM-DD for date filtering)
          RUNS=$(curl -s "https://api.github.com/repos/${OWNER}/${REPO}/actions/runs?per_page=10&status=completed")
          
          # Simple script to check for new completed runs (store last seen ID in a file or secret)
          # For demo, echo recent runs; in production, compare to previous state
          echo "$RUNS" | jq -r '.workflow_runs[] | "\(.name) by \(.actor.login) on \(.created_at) - Status: \(.conclusion) - URL: \(.html_url)"'
          
          # Set output for next step (e.g., last run ID to track changes)
          LAST_RUN_ID=$(echo "$RUNS" | jq -r '.[0].id')
          echo "last_run_id=$LAST_RUN_ID" >> $GITHUB_OUTPUT

      - name: Send to Discord if new runs
        if: steps.poll.outputs.last_run_id != ''
        uses: appleboy/discord-action@v1.2.0
        with:
          webhook_url: ${{ secrets.FEXEMU_WEBHOOK }}
          message: |
            **New Action Run in `${{ env.FEX-Emu }}/${{ env.FEX }}`!**
            Check details: https://github.com/${{ env.FEX-Emu }}/${{ env.FEX }}/actions
            (Last run ID: ${{ steps.poll.outputs.last_run_id }})
          color: "#00ff00"  # Green for success; use "#ff0000" for failures, etc.
          # username: "GitHub Poller Bot"  # Uncomment for custom bot name
