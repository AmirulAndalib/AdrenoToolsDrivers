name: VKD3D Workflow Runs

on:
  schedule:
    - cron: '*/1 * * * *'

jobs:
  monitor:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get last sent run ID
        id: get_last_id
        run: |
          if [ -f last_run_id.txt ]; then
            LAST_ID=$(cat last_run_id.txt)
          else
            LAST_ID=0
          fi
          echo "last_id=$LAST_ID" >> $GITHUB_OUTPUT

      - name: Fetch recent workflow runs from FEX-Emu/FEX
        id: fetch_runs
        run: |
          RESPONSE=$(curl -s -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/HansKristian-Work/vkd3d-proton/actions/runs?per_page=20)
          echo "$RESPONSE" > runs.json

      - name: Process and notify on new successful push-triggered runs
        env:
          WEBHOOK_URL: ${{ secrets.VKD3D_WEBHOOK }}
          LAST_ID: ${{ steps.get_last_id.outputs.last_id }}
        run: |
          # Extract runs that are completed, successful, triggered by push, and id > last_id
          NEW_RUNS=$(jq '[.workflow_runs[] | select(.status == "completed" and .conclusion == "success" and .event == "push" and .id > '"$LAST_ID"') | {id: .id, url: .html_url}] | sort_by(.id)' runs.json)

          # Get the number of new runs
          COUNT=$(echo "$NEW_RUNS" | jq 'length')

          if [ "$COUNT" -gt 0 ]; then
            MAX_ID=0
            for i in $(seq 0 $(($COUNT - 1))); do
              RUN_ID=$(echo "$NEW_RUNS" | jq -r ".[$i].id")
              RUN_URL=$(echo "$NEW_RUNS" | jq -r ".[$i].url")

              # Send notification to Discord webhook (sending the URL should trigger native embed)
              curl -H "Content-Type: application/json" -d "{\"content\": \"$RUN_URL\"}" "$WEBHOOK_URL"

              # Update max_id
              if [ "$RUN_ID" -gt "$MAX_ID" ]; then
                MAX_ID=$RUN_ID
              fi
            done

            # Update last_run_id.txt with the max id
            echo "$MAX_ID" > last_run_id.txt

            # Commit and push the updated file
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            git add last_run_id.txt
            git commit -m "Update last successful run ID"
            git push
          fi
